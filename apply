#!/usr/bin/env python3

"""
Creates symlinks for any files that do not exist in the home directory.
"""

import sys
from pathlib import Path


HOME_SOURCE = Path(__file__).parent / "home"
HOME_DEST = Path.home()


def main(force: bool = False) -> int:
    returncode = 0

    for path, _dirs, files in HOME_SOURCE.walk():
        dir_relative_to_source = path.relative_to(HOME_SOURCE)
        dir_destination = HOME_DEST / dir_relative_to_source

        dir_source_stat = path.stat()
        if not dir_destination.exists():
            print(f"MKDIR {dir_destination}")
            dir_destination.mkdir(parents=True, mode=dir_source_stat.st_mode)

        for file in files:
            if file == ".gitkeep":
                continue

            file_source = path / file
            file_destination = dir_destination / file

            if file_destination.exists(follow_symlinks=False):
                if file_destination.is_symlink() and file_destination.resolve() == file_source:
                    continue
                elif force:
                    print(f"WARN: {file_destination} exists but is not a symlink to {file_source}!")
                    print(f"[FORCE] RENAME {file_destination} -> {file_destination}.bkp")
                    file_destination.rename(f"{file_destination}.bkp")
                else:
                    print(f"ERROR: {file_destination} exists but is not a symlink to {file_source}!")
                    returncode = 1
                    continue

            print(f"SYMLINK {file_destination} -> {file_source}")
            file_destination.symlink_to(file_source)

    return returncode


if __name__ == "__main__":
    exitcode = 2
    try:
        force = ("--force" in sys.argv or "-f" in sys.argv)
        print(f"force={force}")
        exitcode = main(force=force)
    except Exception as e:
        print(e, file=sys.stderr)
        exitcode = 1
    finally:
        if exitcode == 0:
            print("The command completed successfully.")
        else:
            print(f"ERROR: Process returned non-zero exit code {exitcode}.")
        sys.exit(exitcode)
